<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Coding with Honour]]></title>
  <link href="http://blog.samstokes.co.uk/atom.xml" rel="self"/>
  <link href="http://blog.samstokes.co.uk/"/>
  <updated>2016-02-25T19:01:20+00:00</updated>
  <id>http://blog.samstokes.co.uk/</id>
  <author>
    <name><![CDATA[Sam Stokes]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    
      <entry>
        <title type="html"><![CDATA[Let's stop talking about quality]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2016/02/24/quality-vs-empathy/"/>
        <updated>2016-02-24T22:16:06+00:00</updated>
        <id>http://blog.samstokes.co.uk/blog/2016/02/24/quality-vs-empathy</id>
        <content type="html"><![CDATA[<p>I don’t like discussions about quality in software.</p>

<p>Don’t get me wrong.  I want to build software I can be proud of.  I want to be part of teams that build great products.  I aspire to craftsmanship.  What I dislike is the <em>word</em> “quality”, and how it tends to polarise conversations.</p>

<p><a href="https://www.flickr.com/photos/thomashawk/16564397826"><img src="http://blog.samstokes.co.uk/images/quality/quality-wall.jpg" alt="Quality" class="center" /></a></p>

<h2 id="quality-is-subjective">Quality is subjective</h2>

<p>A lot of factors go into software quality.  Good software is fast.  Good software is maintainable, readable, scalable, and well tested.  Good software has attractive UI and intuitive interactions.  Good software has no bugs, or at least no serious bugs, or at least no bugs that our customer support team can’t work around.</p>

<p>In practice, quality means whatever you want it to mean.  To a fan of unit testing, quality means investing in unit testing.  To a designer, quality means beautiful screens and careful interaction design.  To a customer support manager, quality means all bugs are documented and the serious ones have an ETA.</p>

<p>If you tell people that your estimates are higher than expected because you want to do a quality job, some of them will think you’re spending time refactoring and writing tests, and some will think you’re going pixel-by-pixel in Photoshop.  Some of them will end up disappointed.</p>

<!-- more -->

<h2 id="quality-is-boolean">Quality is boolean</h2>

<p>Not only is quality subjective, it’s also impossible to quantify.  It’s not clear how much time spent focussing on quality will stop those production issues, or how much less quality you’ll get if you do a rush job.  Do you want your products to be 50% better designed, or will 30% do?</p>

<p>That makes it hard to track quality over time, but that isn’t the real problem.  The problem is that <em>quality leaves no room for discussion</em>.  Debates boil down to “do you want it done properly or not?”</p>

<p>Often this comes up in the form of a decision between quality and speed:</p>

<blockquote>
  <ul>
    <li>“We’re a startup - we don’t have time for testing and code review, or we’ll miss the market window.”</li>
    <li>“We’ve been moving too fast and breaking too many things.  We need to slow down and be more careful.”</li>
  </ul>
</blockquote>

<p>If you frame it this way, you can choose speed or quality, but you can’t have both.</p>

<p><a href="https://www.flickr.com/photos/saeru/2334554340"><img src="http://blog.samstokes.co.uk/images/quality/quality-workmanship-can-suck-it.jpg" alt="Beta's in two weeks, quality workmanship can suck it" class="center" /></a></p>

<h2 id="quality-is-judgmental">Quality is judgmental</h2>

<p>It’s not generally possible to argue against quality.  It’s a rhetorical word, loaded with positive connotations.  That means discussions about <em>improving</em> quality tend to come across as criticism:</p>

<blockquote>
  <p>“I can’t do a quality job on this timeline.”</p>
</blockquote>

<p>“I can do a <em>bad</em> job, but why would you want that?  You must be wrong about when you need this.”</p>

<blockquote>
  <p>“I’d like us to invest in unit testing - it’s a great way to improve the quality of your code.”</p>
</blockquote>

<p>“Our code is terrible right now.”</p>

<blockquote>
  <p>“We’re having too many production issues, so we need to focus on quality.”</p>
</blockquote>

<p>“The team didn’t do a good enough job.  <em>You</em> didn’t do a good enough job.  The prod issues might be due to product management insisting on impossible requirements, or that reorg we had a month before launch, but can we all agree that a <em>quality</em> product wouldn’t have these problems?”</p>

<h2 id="quality-creates-factions">Quality creates factions</h2>

<p>So quality is hard to argue against, hard to nail down, and it’s all or nothing.  Not surprisingly, some people respond by rejecting the concept of quality as unhelpful.  Quality is a luxury we don’t have time for; better to ship something than polish it forever.</p>

<p>What “we don’t have time for quality” really means is: “I’m not sure what you mean by quality, but I know moving fast is more important than what <em>I</em> mean by quality”.  Unfortunately, all too often what gets said is “we don’t have time for quality”.  Framed in these terms, there’s no common ground, and we take up sides, each frustrated at the other’s inability to see the big picture.</p>

<p>The pattern repeats at larger scales.  An engineering team can split into “pragmatic hackers” (“we just get the job done”) and “serious engineers” (“gotta clean up the mess those cowboys make”).  Or engineering can lose trust in the business (“don’t those suits understand how short-sighted they’re being?”) and vice versa (“ignore the nerds grumbling about technical debt, they’re always saying the sky is falling”).</p>

<p>What’s really going on here is a failure of communication.  This talk of factions might sound dramatic, but I bet you’ve heard variants of the above at the watercooler or the bar.  Every little joke and sarcastic aside serves to undermine trust and communication.</p>

<p><a href="https://www.flickr.com/photos/jeffeaton/7436909698"><img src="http://blog.samstokes.co.uk/images/quality/argument.jpg" alt="Argument" class="center" /></a></p>

<h2 id="common-ground">Common ground</h2>

<p>The reality is that doing anything in the real world involves <em>difficult decisions in the face of constraints</em>.  Everyone has more exposure to some of those constraints than others.  The product manager sees customer feedback, feels the urgency of staying relevant in the market.  The designer sees limited screen real estate, the need to engage the user quickly.  The engineer sees maintenance costs and technical limitations.  But you’re all working toward the same goal: ship products, grow the business, delight your customers.</p>

<p>The only way to do that is to <em>communicate</em>.  These conversations often seem like a contest between one person’s viewpoint and another.  But the best answer for your situation probably has elements of both!  Instead of your diverse experiences getting in the way of a productive conversation, why not have them <em>be</em> the conversation?</p>

<p>Help other people understand the constraints you see, and you can work together to decide the best tradeoffs to make.  Understand the constraints another person faces, and you can understand how to help them.  Instead of negotiating, you can collaborate.</p>

<p><a href="https://www.flickr.com/photos/canonsnapper/8701575728"><img src="http://blog.samstokes.co.uk/images/quality/communication.jpg" alt="Communication" class="center" /></a></p>

<h2 id="empathy">Empathy</h2>

<p>Next time you’re frustrated by an unrealistic deadline or an inflated estimate, instead of assuming that person just <em>doesn’t get it</em> - ask how things look from where they are.  What does a product manager do every day?  What does it mean to an engineer that the code is a mess?  What was the designer trying to achieve with that colour change?</p>

<p>Instead of talking about quality, let’s talk about goals.  We want to see whether customers engage with this new feature.  We want to cut down how often our engineers get paged at 3am.  We want the main features to be at most 3 clicks away.  We want to communicate the value of the product in the first 5 minutes.  Let’s talk about how our different goals interact.  Maybe there’s a way to do it that gets everyone closer to their goals?</p>

<p>Because that’s the fun part.  That’s why we work in teams - bringing our different strengths together, solving problems, to build something awesome.</p>

<p>So let’s have less talk about quality, and more talk about empathy.  Go talk to someone.  Learn what makes them tick.  And make something cool together.</p>

<p><a href="https://www.flickr.com/photos/abiwt/10283999515"><img src="http://blog.samstokes.co.uk/images/quality/teamwork.jpg" alt="Teamwork" class="center" /></a></p>

<p class="credits">
Thanks to
<a href="https://twitter.com/paulbiggar">Paul Biggar</a>,
<a href="https://twitter.com/pvh">Peter van Hardenberg</a> and
Dorothy Li for reviewing a draft of this post.
</p>

<p class="credits">
Photo credits:
<a href="https://www.flickr.com/photos/thomashawk/16564397826">Thomas Hawk</a>
("quality" wall painting),
<a href="https://www.flickr.com/photos/saeru/2334554340">saeru</a>
("quality workmanship" sign, cropped from original),
<a href="https://www.flickr.com/photos/jeffeaton/7436909698">Jeff Eaton</a>
(Lego argument),
<a href="https://www.flickr.com/photos/canonsnapper/8701575728">Michael Summers</a>
(discussion with notebook), and
<a href="https://www.flickr.com/photos/abiwt/10283999515">the Anita Borg Institute</a>
(people collaborating around a laptop).
</p>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[Programming is not magic]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2014/09/22/magic/"/>
        <updated>2014-09-22T09:00:00+00:00</updated>
        <id>http://blog.samstokes.co.uk/blog/2014/09/22/magic</id>
        <content type="html"><![CDATA[<p>When people who program want to convey to others the joy and satisfaction we
find in our craft, we often liken it to doing magic. The analogy evokes a sense
of empowerment, possibility and freedom. But I think comparing programming to
magic actually does unintended harm, because it has another connotation: that
programming is a mystical ability, something you are born with, not something
you can learn.</p>

<p><a href="https://www.flickr.com/photos/evaysucamara/5438832695"><img src="http://blog.samstokes.co.uk/images/magic/magician.jpg" alt="Magician" /></a></p>

<p>I want to get a lot more people programming, and I think we need a better
analogy to get there.</p>

<!-- more -->

<h1 id="yer-a-wizard-harry">Yer a wizard, Harry</h1>

<p>People compare programming to magic with the best of intentions. In a heartfelt
and inspiring <a href="http://www.youtube.com/watch?v=3_zW63dcZB0">keynote</a> at
<a href="https://thestrangeloop.com">Strange Loop</a> on the importance of sharing the joy
that programming brings us, <a href="https://twitter.com/gigasquid">Carin Meier</a>
likened programming to dreams of flying. A Kickstarter project
<a href="https://www.kickstarter.com/projects/thoughtstem/codespells-express-yourself-with-magic">CodeSpells</a>
offers to let you “express yourself with magic”. Fred Brooks wrote that the
programmer “builds castles in the air”.</p>

<p>As a way to inspire more people to learn to program, this seems to make
sense. Our popular culture is full of magical powers we would all love
to have access to: Harry Potter rides a broomstick and fights evil,
Gandalf summons giant eagles to get him out of harm’s way, Wolverine can
heal from any injury. (Of course, the “mutations” of the X-Men and “The
Force” in Star Wars are magic by another name.) Why wouldn’t anyone want
to learn something that gave them magical powers?</p>

<p>Here’s the problem: it’s almost always a special group of people who
have the magic. Harry Potter learns early on that he is a wizard, and
that most other people are not wizards. Gandalf never teaches Frodo any
spells. The X-Men have powers because of their mutations - they were
just born that way.</p>

<p>When we tell a non-programmer, who has watched <em>Harry Potter</em> and <em>Lord of the
Rings</em>, that programming is like magic, he’s likely to respond: “that sounds
great; I wish <em>I</em> could do it”. Most people already have little
concept of
<a href="http://blog.samstokes.co.uk/blog/2014/05/01/what-programming-is-like/">what programming is like</a>. Telling
him programming is like magic confirms what he probably already suspected:
programming is complicated and mysterious; it’s not for him.</p>

<h1 id="the-man-behind-the-curtain">The man behind the curtain</h1>

<p>Comparing programming to magic gives people some idea of why it’s <em>fun</em>,
but no idea of what it <em>is</em> - or how to learn it. Claiming to be
wizards, we are more like the Wizard of Oz - hiding behind a curtain of
mystique, magnifying our achievements to impress others. If we want
everyone to have access to this power, we need to pull back the curtain.</p>

<p>Programmers aren’t wizards. We’re just people, pulling levers to operate
the machine. We learned to program the same way we learned to cook or
ride a bike - by trying and failing, changing something and getting a
different response, and enjoying it enough to keep going. We need to
show what that process looks like, and how anyone with access to a
computer can do it.</p>

<p>Programming isn’t magic. It’s building a machine that talks to another
machine that moves data around, or makes pixels change colour, or makes
a speaker cone vibrate. We need to show how to do those things, and how
they add up to produce results that <em>feel</em> like magic.</p>

<h1 id="robot-dance-party">Robot dance party</h1>

<p>That brings me back to the Strange Loop keynote. After Meier’s
presentation, she was joined by two live-coding DJs,
<a href="https://twitter.com/samaaron">Sam Aaron</a> and
<a href="https://twitter.com/graham_jp">Jonathan Graham</a>. While they built up a
soundtrack from samples and loops, Meier set up a menagerie of robots,
including a quadcopter, and wrote a quick program to control the robots. Watch
the part <a href="http://www.youtube.com/watch?v=3_zW63dcZB0&amp;t=40m30s">at 40:30</a> where
she gets the quadcopter dancing to the beat.</p>

<p>Let’s go over that again. Three programmers, with a live audience, <em>made
a flying robot dance to music they created</em>. If that’s not a magical
<em>result</em>, I don’t know what is.</p>

<p>But it wasn’t magic. Meier controlled the robots by sending
<a href="http://nodebots.io/">a few simple commands</a> to their motors. Aaron and Graham
produced the music with a screenful of code, using the
<a href="http://overtone.github.io/">Overtone</a> toolkit. Using a
<a href="http://sonic-pi.net/">simplified version</a> of Overtone, Aaron has successfully
taught 12-year-olds to make music using code.</p>

<h1 id="programming-as-a-musical-instrument">Programming as a musical instrument</h1>

<p>The kids in Aaron’s class learned how to play a sample, change the pitch
to make a melody, loop it to make a backing track. They learned how to
build up several tracks into an ensemble, and how to tweak the music
until it sounded good. They learned all this in much less time than they
would have needed to learn a real musical instrument, or at least
produce any kind of pleasant sounds from it.</p>

<p>Of course, they were also learning programming: how to build up complex
systems from simple units, how to debug by changing parameters and
observing the change in output. But as far as they were concerned, they
were making music.</p>

<p>So if we want the rest of the world to have magical powers too, maybe
instead of comparing programming to magic, we should compare it to
<em>music</em>. Programming is like a musical instrument. A beginner can play
simple tunes, and as they grow more adept, they can add chords,
harmonies, counterpoint. Not everyone can write a symphony. But we can
all make robots dance.</p>

<p class="credits">
Inspired by a conversation with <a href="https://twitter.com/roseaboveit">@roseaboveit</a>.
</p>

<p class="credits">
Lego photo credit: <a href="https://www.flickr.com/photos/evaysucamara/5438832695">evaysucamara</a>
</p>

<p class="credits">
This was originally posted <a href="https://www.linkedin.com/today/post/article/20140922160434-4503063-programming-is-not-magic">on LinkedIn</a>
</p>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[What programming is like]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2014/05/01/what-programming-is-like/"/>
        <updated>2014-05-01T18:24:12+00:00</updated>
        <id>http://blog.samstokes.co.uk/blog/2014/05/01/what-programming-is-like</id>
        <content type="html"><![CDATA[<p>What is programming like?</p>

<p>We in the software profession have done a terrible job of explaining to the public what it is that we do.  Everyone has interacted with a teacher or a doctor.  There are TV shows about lawyers, cops, even government officials.  However warped our impression of their day-to-day, we can relate to these professions.  TV depicts programmers as modern-day wizards, socially aloof, hacking into systems or bringing the new algorithm online just in time to stop the cyberterrorists — totally disconnected from people’s experience of the software they use every day.  Software remains mysterious.</p>

<p>This isn’t just a problem for awkward “so, what do you do?” conversations at parties.  I believe one reason why so many demographics are underrepresented in software is that unless you grew up with it, you’re unlikely to have the faintest idea what making software is actually like.  Why would you strive — particularly against economic obstacles and systemic biases — to enter a profession you know nothing about?</p>

<h2 id="programming-sucks">Programming sucks</h2>

<p>Inspired by a friend who couldn’t see what was so hard about programming, Peter Welch wrote a <a href="http://stilldrinking.org/programming-sucks">hilarious, heartfelt and all-too-true rant</a> about what writing software is like.  His title, and answer: “Programming Sucks”.  The whole, long post is enjoyable reading, but here’s a representative excerpt:</p>

<blockquote>
  <p>Imagine joining an engineering team […] for a bridge in a major metropolitan area. […] The bridge was designed as a suspension bridge, but nobody actually knew how to build a suspension bridge, so they got halfway through it and then just added extra support columns to keep the thing standing, but they left the suspension cables because they’re still sort of holding up parts of the bridge. Nobody knows which parts, but everybody’s pretty sure they’re important parts. […]</p>

  <p>Would you drive across this bridge? No. If it somehow got built, everybody involved would be executed. Yet some version of this dynamic wrote every single program you have ever used, banking software, websites, and a ubiquitously used program that was supposed to protect information on the internet but didn’t.</p>
</blockquote>

<!-- more -->

<p>Welch brilliantly describes the nuances and stresses of trying to cobble together something useful, based on a blueprint nobody bothered to draw, out of parts designed to do almost, but not exactly, what you need them to do.</p>

<p>Reading this, I immediately wanted to send it to every friend and family member to whom I’d failed to explain what it was I did all day.  But I didn’t send it, because it only tells part of the story.  Programming sucks, so why do it?</p>

<p>For me, it’s because programming is <em>amazing</em>.</p>

<h2 id="why-we-do-it">Why we do it</h2>

<p>Programming is like building structures out of Lego, but I never run out of Lego bricks, and if there’s no brick with the exact shape that I need, I can <em>make</em> that brick.  I can take the structures I build and use them <em>as</em> bricks to build bigger, more ambitious structures.  I can build tools out of bricks to help me build quicker.  If I build a model city, or a crane for building model cities, I can offer them to millions of people to download and play with, in any part of the world.</p>

<p><a href="https://www.flickr.com/photos/dunechaser/2703633791"><img src="http://blog.samstokes.co.uk/images/lego-city.jpg" alt="Lego city" /></a></p>

<p>Fred Brooks wrote in <em>The Mythical Man-Month</em>:</p>

<blockquote>
  <p>The programmer, like the poet, works only slightly removed from pure thought-stuff. He builds castles in the air, from air, creating by exertion of the imagination. Few media of creation are so flexible, so easy to polish and rework, so readily capable of realizing grand conceptual structures.</p>

  <p>Yet the program construct, unlike the poet’s words, is real in the sense that it moves and works, producing visible outputs separate from the construct itself. It prints results, draws pictures, produces sounds, moves arms.</p>
</blockquote>

<p>One of the most liberating things about writing software is that the tools you use for it are <em>also</em> software.  Remember that Lego tool you could buy to help you pry bricks apart?  Imagine if you could build that tool <em>out of Lego bricks</em>.  We can use the skills we have for writing software to improve the tools we work with.  We can write software that makes us <em>better at writing software</em>.</p>

<p>There is a dark side, as Welch entertainingly describes.  There are deep, scary flaws in the tools and processes we use to build software.  Everything is more difficult and arcane than it should be.  We spend so much effort, after the software is “done”, fixing problems that should never have been possible to introduce in the first place.  Sometimes it’s amazing that anything ever works.  But somehow, it does, and so we have smartphones, and Angry Birds, and the Internet.  Programming sucks, but look at where we are!</p>

<p>Programming gives us live video conversations with relatives around the world; a <a href="http://en.wikipedia.org/wiki/Human_Genome_Project">map of our own biology</a>; widgets that monitor oil pipelines from the inside; spreadsheets that run entire businesses; games where you build cities, or <a href="http://www.goat-simulator.com/">pretend to be a goat</a>.</p>

<p>Of course these are specialised fields, each with its own demands and disciplines, but they all start with writing apparent gibberish in a text editor.  The reach and breadth of what you can do with gibberish is remarkable.</p>

<h2 id="castles-in-the-air">Castles in the air</h2>

<p>Programming sucks, but for me, that is cause for tremendous optimism.  We can use programming to improve programming!  We can reduce the complexity that programmers have to keep in their heads.  We can make more visual, interactive, intuitive tools for understanding the behaviour of programs.  We can make it easier to fix incorrect programs, and easier to write correct ones.  Programming is only going to get easier, and more powerful, and more accessible.</p>

<p>If we’ve come this far — in the 60-odd years that programming has even been possible — while programming sucks, how far can we go when it doesn’t?</p>

<p>Brooks’ phrase “building castles in the air” was once <a href="http://en.wiktionary.org/wiki/build_castles_in_the_air">used satirically</a>, to mean chasing an impossible dream.</p>

<p>For me, <em>that’s</em> what programming is like.</p>

<p class="credits">
Thanks to
<a href="https://www.linkedin.com/in/josephmchow">Joseph Chow</a>,
<a href="http://www.lihaco-consulting.com/">Lily Han</a>,
<a href="https://twitter.com/ConradIrwin">Conrad Irwin</a>,
<a href="http://martin.kleppmann.com/">Martin Kleppmann</a>,
<a href="https://twitter.com/LeeMallabone">Lee Mallabone</a> and
<a href="http://www.linkedin.com/in/kiranprasad">Kiran Prasad</a>
for reviewing a draft of this post.  Their feedback improved this post immeasurably.
</p>

<p class="credits">
Lego photo credit:
<a href="https://www.flickr.com/photos/dunechaser/2703633791">dunechaser</a>
</p>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[Early afternoon serendipity]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2010/10/20/early-afternoon-serendipity-rainbow-uplighting/"/>
        <updated>2010-10-20T13:08:19+00:00</updated>
        <id>http://blog.samstokes.co.uk/post/1358591858</id>
        <content type="html"><![CDATA[<p>Rainbow uplighting.</p>
<img src="http://blog.samstokes.co.uk/tumblr_files/tumblr_lalb5wfGag1qarkt9o1.jpg"/>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[Inception isn't science fiction (spoilers!)]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2010/08/01/inception-isnt-science-fiction-spoilers/"/>
        <updated>2010-08-01T23:25:00+00:00</updated>
        <id>http://blog.samstokes.co.uk/post/890499536</id>
        <content type="html"><![CDATA[<p><a href="http://halphillips.tumblr.com/post/822919795/inception"
class="tumblr_blog">This</a> is an insightful analysis of <em>Inception</em>, but I think it doesn&#8217;t go far enough.</p>

<h1>Spoilers below</h1>

<p><img src="http://farm4.static.flickr.com/3424/3380212745_b7d0270bbd_b.jpg" alt="OMFG huge spoilers" title="OMFG huge spoilers"/></p>

<!-- more -->

<p>Hal&#8217;s interpretation of <em>Inception</em>'s ambiguous ending is that the whole film is Cobb's dream, and that the titular &#8220;inception&#8221; is convincing Cobb that he has to move past his guilt (&#8220;Non, je ne regrette rien&#8221;).  He suggests that in the true reality, which we never see in the film, Ariadne attempts to perform this inception on Cobb, with presumably therapeutic motivations.  I think if you take this interpretation a little further, you get a much more satisfying answer.</p>

<p>The whole premise of the film is a technology which allows a sleeping person to enter another&#8217;s dream and interact with them. The dream-sharing technology is given a hasty introduction halfway through the film (&#8220;the military developed it for combat training&#8221;) and never explained.  There&#8217;s nothing wrong with that - plenty of science fiction movies depend on some hokey tech to make their cool settings or plotlines possible - but to me it does stick out as an oddity.</p>

<p>All the other fantastic elements of <em>Inception</em> - zero-gee fistfights, tops that spin forever, bending Paris in on itself - take place in dreams, so we don&#8217;t think to question them.  Like science fiction films, dreams often take place in the context of some absurd premise which you accept as perfectly natural and obvious.  You&#8217;ve got to get somewhere, but you&#8217;re on the wrong train, and you&#8217;re going to be late - only when you wake up do you realise you don&#8217;t even remember where you needed to go.  Or you can fly and shoot lasers from your hands, and of course you can, because how else could you save the world from the evil killer wasps?  Fantasy in dreams is normal, familiar and obvious during the dream, and fantastic only when you wake up.  But <em>Inception</em> asks us to suspend disbelief that dream-sharing is possible.</p>

<p>Wait a second&#8230;</p>

<p>If the whole film is Cobb&#8217;s dream, then the one piece of science fiction, the nebulous dream-sharing technology, on which the whole plot depends but is never properly explained&#8230; is just part of the dream!</p>

<p><em>Inception</em> isn&#8217;t a science fiction adventure where people can invade each other&#8217;s dreams and plant secrets in their minds.  It&#8217;s a chronicle of <em>Cobb&#8217;s dream</em>, which <em>is</em> a science fiction adventure.  Dream-sharing, extractors, architects, the sinister corporation chasing him - they don&#8217;t have to actually exist, because they&#8217;re all figments of Cobb&#8217;s imagination!</p>

<p>So, my own interpretation of <em>Inception</em>: Cobb&#8217;s flashbacks of his kids and of his wife&#8217;s life and death are idealised glimpses of the <em>real</em> real world, which we don&#8217;t otherwise see in the film.  He has very real issues to deal with.  He&#8217;s also apparently been watching <em>The Matrix</em> a lot, because when he dreams, his subconscious chooses to frame his issues in an epic struggle against faceless oppression with reality-bending special effects.  Sure, it&#8217;s elaborate and intricate even by dream standards, but Cobb&#8217;s <em>really</em> messed up.</p>

<p>The &#8220;inception team&#8221; - Ariadne, Arthur, Saito and the rest - are simply projections of Cobb&#8217;s subconscious; their purpose is to force him to confront those aspects of his memories and emotions he can&#8217;t face up to while awake.  His revelation in the cottage on top of the skyscraper is real: that clinging to his guilt is what is keeping him from his children.  That&#8217;s the climax of the movie because that&#8217;s where his subconscious was trying to get him all along.  Cobb is performing inception <em>on himself</em>.</p>

<p>If you&#8217;re not yet convinced that all the characters are simply created by Cobb&#8217;s unconscious mind, look at Ariadne - named for the woman who gave Theseus the tools he needed to slay the dreaded Minotaur, and then escape from the Labyrinth that is its lair.  The first thing Cobb asks of her is to <em>design</em> a maze which he can&#8217;t find his way out of: he must surround his guilt - the Minotaur - in a Labyrinth before he can slay it.  She leads him to the confrontation, gives him the strength to win, then shows him the way back out.</p>

<p>This interpretation feels pretty satisfying to me.  It doesn&#8217;t seem to have any holes.  Anything is possible in a dream, and indeed noticing strange inconsistencies and inaccuracies after you &#8220;wake up&#8221; (leave the cinema) is a familiar feeling.  And the way the film both refers to and represents itself is a hallmark of Nolan&#8217;s films: see for example <em>The Prestige</em>, which illustrates the mystery and allure of stage magic by performing an elaborate feat of misdirection on the viewer, who - Nolan asserts - &#8220;wants to be fooled&#8221;.  Dreams are so powerful because we fool ourselves.</p>

<p>Tell me why I&#8217;m wrong in the comments.</p>

<hr><p>Spoiler photo credit: <a href="http://www.flickr.com/photos/charlo_be/3380212745/">charlo.be on Flickr</a></p>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[Vim wizardry #1]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2010/07/04/vim-wizardry-1/"/>
        <updated>2010-07-04T03:24:00+00:00</updated>
        <id>http://blog.samstokes.co.uk/post/767636740</id>
        <content type="html"><![CDATA[<p>(I wrote this as a <a href="http://news.ycombinator.com/item?id=1485009">response</a> to an Ask Hacker News <a href="http://news.ycombinator.com/item?id=1484061">post about learning Vim</a>, but I thought it deserved a life of its own.)</p>

<p>This is one of my favourite Vim features.  Say you have the following code:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">do_something_with</span><span class="p">(</span><span class="n">some</span> <span class="o">+</span> <span class="n">long</span> <span class="o">*</span> <span class="n">complicated</span> <span class="o">*</span> <span class="n">expression</span><span class="p">)</span>
                           <span class="o">^</span></code></pre></figure>

<p>Say your cursor is where the caret indicates.  Typing <code>ci)</code> (&#8220;change inside parens&#8221;) in normal mode will:</p>

<ul><li>delete all the text between the two matching parens</li>
<li>place you in insert mode with the cursor between the two (now adjacent) parens</li>
<li>put the deleted text in the yank buffer so that <code>p</code> will paste it.</li>
</ul><p>The use case here is obviously so you can assign a name to that long complicated expression.  <code>ci)</code> is much easier than selecting it with the mouse, and keeps your hands on the keyboard where they belong ;)</p>

<!-- more -->

<p>With nested parentheses, it does what you expect (affects the text contained by the innermost matching pair to contain your cursor - try it and see).</p>

<p>Other equally useful variants:</p>

<ul><li><code>i"</code> - &#8220;inside double quotes&#8221; - everything between double quotes</li>
<li><code>i'</code> - &#8220;inside single quotes&#8221;</li>
<li><code>iw</code> - &#8220;inside word&#8221; - the word the cursor is on</li>
<li><code>is</code> - &#8220;inside sentence&#8221; - great for editing prose</li>
<li><code>ip</code> - &#8220;inside paragraph&#8221;</li>
</ul><p>There are also similar motions beginning with &#8220;a&#8221;:</p>

<ul><li><code>a)</code> - like <code>i)</code> but includes the parens (e.g. <code>da)</code> deletes everything inside parens and the parens themselves)</li>
<li><code>a"</code> - similarly</li>
<li><code>aw</code> - like <code>iw</code> but includes trailing whitespace.</li>
</ul><p>For another great taste that goes great with this, see the <a href="http://www.vim.org/scripts/script.php?script_id=1697">surround.vim</a> plugin.  To whet your appetite: six keystrokes to wrap your current selection in &lt;div&gt; tags; four to change a string from &#8220;double-quoted&#8221; to &#8216;single-quoted&#8217;.</p>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[Please demand debate on the Digital Economy Bill]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2010/03/21/please-demand-debate-on-the-digital-economy-bill/"/>
        <updated>2010-03-21T18:03:00+00:00</updated>
        <id>http://blog.samstokes.co.uk/post/463663523</id>
        <content type="html"><![CDATA[<!--
vim:ft=mkd
-->

<p>Don&#8217;t let the Government rush draconian internet laws through Parliament before the election: <a href="http://www.38degrees.org.uk/page/speakout/extremeinternetl">write to your MP</a>!  I did.</p>

<!-- more -->

<p>(<a href="http://blog.samstokes.co.uk/2009/11/17/on-three-strikes-email-to-my-mp.html">Others</a> in this <a href="http://blog.samstokes.co.uk/2009/11/30/why-the-digital-economy-bill-is-flawed.html">series</a>.)</p>

<blockquote>
  <p>Dear Meg Hillier,</p>
  
  <p>Thank you for your thoughtful response of 17 December regarding the Digital
  Economy Bill.  I appreciate your taking my concerns on board, and indicating
  that you shared some of them.</p>
  
  <p>I&#8217;m writing today to ask you to demand a full Commons debate on this highly
  controversial Bill, and not to support Government plans to rush it into law
  before the election.</p>
  
  <p>In our previous correspondence, I told you about my concerns about the measures
  in the Bill to tackle illegal file-sharing: that besides their intended effect
  of incentivising creation, these measures would</p>
  
  <ol><li><p>stifle the UK&#8217;s digital businesses (including my own software consulting
  business, and the businesses of my clients) by creating a restrictive and
  uncertain legal environment;</p></li>
  <li><p>damage British social justice, by exacting disproportionate penalties on a
  potentially huge number of citizens (and voters), without a required standard
  of evidence or right to redress for false accusation (points with which you
  indicated you shared my concern), and without a court trial or presumption of
  innocence; and</p></li>
  <li><p>harm British democracy, by building in &#8220;reserve powers&#8221; for unelected
  officials to change copyright law without Parliamentary scrutiny, and by
  allowing massive and largely evidence-free lobbying from special interest
  groups to unduly influence the legislation.</p></li>
  </ol><p>Especially in light of point 3 above, I have been extremely concerned to read
  in the press that the Government is likely to force the Bill into law before
  the upcoming election.  It is disturbing that the Government would deny MPs the
  chance to fully consider the implications.  It is downright scary that crucial
  details of the most controversial proposals might be worked out behind closed
  doors in the &#8220;wash-up&#8221;.</p>
  
  <p>As a constituent, I am writing to you today to ask you to do all you can
  to ensure the Government doesn&#8217;t just rush the bill through and deny us our
  democratic right to scrutiny and debate.</p>
  
  <p>There is no evidence that the need is so pressing as to justify passing bad
  laws.  The content industry lobbyists asking for this hasty lawmaking claim
  that they urgently need the measures in the Bill to keep their industry alive.
  This is an extraordinary claim in light of recent news that, in the midst of a
  recession, <a href="http://news.bbc.co.uk/1/hi/business/8567099.stm" title="Online music royalties up by 73% in 2009, according to PRS for Music">online music revenues <em>grew</em> by 73%</a>!  The sky is clearly not
  falling.</p>
  
  <p>The concerns raised by myself and many others are still largely unaddressed,
  despite the large number of amendments proposed during the debate in the Lords
  (itself evidence of the importance and contentious nature of this Bill).  The
  proposed legislation will still fail to support authors of copyrighted works,
  and it will still do great harm to Britain&#8217;s digital economy.</p>
  
  <p>I apologise for extending this already long letter, but I would like to close
  by quoting from a <a href="http://www.labourlist.org/digital-bill-a-wise-move-lisa-ansell" title='"The Digital Economy Bill: A wise move?"'>post written today on the LabourList blog</a>:</p>
  
  <blockquote>
    <p>The bill which is supposed to provide the structure for Britain’s digital
    future, is currently being opposed by the internet service provders who are
    central to that future – not because they are worried about their profits,
    but because they don&#8217;t want to police their customers in this way, especially
    not on the basis of an assumption that has not been proved. Consumers are
    worried that this clause could have serious effects on their lives. Consumers
    vote.</p>
    
    <p>Is this clause so important that it is necessary to push it through at any
    cost? Is it really wise to have this bill become an easily recalled symbol of
    Labour&#8217;s record on civil liberties, and a &#8216;sidestepping&#8217; of democratic
    process?  This close to this election?</p>
  </blockquote>
  
  <p>Once again, please demand a full democratic debate on the Digital Economy Bill.</p>
  
  <p>Yours sincerely,</p>
  
  <p>Sam Stokes</p>
</blockquote>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[The genesis of a building]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2010/02/16/the-genesis-of-a-building-witnessing-this-is/"/>
        <updated>2010-02-16T18:01:57+00:00</updated>
        <id>http://blog.samstokes.co.uk/post/393068588</id>
        <content type="html"><![CDATA[<p>Witnessing this is pretty cool from a “making things” point of view.  Shame
it’s happening right outside our flat.</p>
<img src="http://blog.samstokes.co.uk/tumblr_files/tumblr_kxy4r9nBk11qarkt9o1.jpg"/>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[Limerick Lisp-style]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2009/12/07/limerick-lisp-style/"/>
        <updated>2009-12-07T09:18:00+00:00</updated>
        <id>http://blog.samstokes.co.uk/post/272996560</id>
        <content type="html"><![CDATA[<p>In honour of the <a href="http://skillsmatter.com/event/cloud-grid/functional-programming-exchange-2009">Functional Programming eXchange</a>, on a bus to which I am writing this.</p>

<pre>
 (a (program (writtenp :in 'lisp))
     (may 'be (and (simple) (elegant) (crisp)))
     (but (cry '(C pros) "too *fancy();"
             "for (i; simply(); &amp;cant++ + ++see)"
             "{ the code; for (;;) { the parenthesis; } }")))
</pre>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[My first Manhattan]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2009/12/04/my-first-manhattan/"/>
        <updated>2009-12-04T23:23:00+00:00</updated>
        <id>http://blog.samstokes.co.uk/post/269546347</id>
        <content type="html"><![CDATA[<img src="http://blog.samstokes.co.uk/tumblr_files/tumblr_ku5iahSPmB1qarkt9.jpg"/>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[Made enchiladas]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2009/12/03/made-enchiladas/"/>
        <updated>2009-12-03T01:44:00+00:00</updated>
        <id>http://blog.samstokes.co.uk/post/266994355</id>
        <content type="html"><![CDATA[<img src="http://blog.samstokes.co.uk/tumblr_files/tumblr_ku1zhvrOHh1qarkt9.jpg"/>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[Why the Digital Economy Bill is flawed]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2009/11/30/why-the-digital-economy-bill-is-flawed/"/>
        <updated>2009-11-30T14:38:00+00:00</updated>
        <id>http://blog.samstokes.co.uk/post/263522599</id>
        <content type="html"><![CDATA[<p><!--
vim:ft=mkd
-->
My MP, <a href="http://www.theyworkforyou.com/mp/meg_hillier/hackney_south_and_shoreditch">Meg Hillier</a>, was kind enough to respond by post to my <a href="http://blog.samstokes.co.uk/2009/11/17/on-three-strikes-email-to-my-mp.html">email</a> about the proposed &#8220;three strikes&#8221; legislation in the UK.  The main content of her response was to forward me a letter she received from <a href="http://www.theyworkforyou.com/mp/stephen_timms/east_ham">Stephen Timms</a>, the Minister for Digital Britain (his actual job title, I&#8217;m not making this up), to &#8220;clarify the Government&#8217;s position on this issue&#8221;.</p>

<p>The forwarded letter mostly just rattled off the party line - illegal file sharing is illegal, artists need to be compensated, the usual unjustified claims of urgency - but it did mention the recent report by the <a href="http://www.ipo.gov.uk">UK Intellectual Property Office</a>, awkwardly entitled <a href="http://www.ipo.gov.uk/pro-types/pro-copy/c-policy/c-strategy.htm" title='"© The Way Ahead" - UK Intellectual Property Office, 28th October 2009'>© The Way Ahead</a>, which is actually pretty encouraging reading: I will discuss it in a separate post soon.</p>

<p>My <a href="http://blog.samstokes.co.uk/2009/11/17/on-three-strikes-email-to-my-mp.html">previous email</a> focused on problems with the &#8220;three strikes&#8221; approach.  Since the Digital Economy Bill was published we&#8217;ve discovered that &#8220;three strikes&#8221; is only one of <a href="http://blogscript.blogspot.com/2009/11/mandy-and-me-some-thoughts-on-digital.html" title="Lilian Edwards discusses in more detail the problems with the Bill">several nasty tricks up Mandy&#8217;s sleeve</a>.  Therefore, and because I felt from her letter that Ms Hillier hadn&#8217;t really taken my concerns on board, I wrote back.</p>

<!-- more -->

<p><em>Update 2009/12/02</em> - since the Digital Economy Bill is currently being debated in the House of Lords, I also sent an edited version of this email yesterday to <a href="http://www.theyworkforyou.com/search/?s=digital+economy&amp;pid=13517&amp;wtt=2">Lord Clement-Jones</a>, who is taking part in this afternoon&#8217;s Second Reading debate.</p>

<blockquote>
  <p>Dear Ms Hillier,</p>
  
  <p>Thank you very much for your swift response to my email of 17th November.  Thank you also for forwarding a copy of Stephen Timms&#8217; letter outlining the Government&#8217;s position, reasoning and intentions regarding illegal filesharing.  I am grateful to him for drawing my attention to the UK Intellectual Property Office&#8217;s report <a href="http://www.ipo.gov.uk/pro-types/pro-copy/c-policy/c-strategy.htm" title='"© The Way Ahead" - UK Intellectual Property Office, 28th October 2009'>© The Way Ahead</a>, which I have read with interest.</p>
  
  <p>Unfortunately, Mr Timms&#8217; letter does not reassure me.  On the contrary, it reinforces my perception that the policies set out in the Government&#8217;s Digital Economy Bill were drafted in haste, based on the shrill lobbying of special interests rather than empirical evidence and objective reasoning.</p>
  
  <p>I do not believe the available evidence justifies imposing technical sanctions on internet users without trial in court, as the Government proposals would allow.  The UKIPO report, published only a month ago, finds that <a href="http://www.ipo.gov.uk/pro-types/pro-copy/c-policy/c-strategy.htm" title="UKIPO report, page 16, paragraph 19">"a lack of strong evidence across the world makes it difficult to establish the case for changes to aspects of copyright law and practice"</a>.  <a href="http://papers.ssrn.com/sol3/papers.cfm?abstract_id=1227762" title='"The Economics of Copyright Law: A Stocktake of the Literature" - Towse, Handke &amp; Stepan, August 2008'>Meta-analyses of the economic literature</a> have similarly observed a poor quality of available evidence and a lack of consensus.</p>
  
  <p>Mr Timms&#8217; letter does not even include the word &#8220;evidence&#8221;; I note with concern that this omission seems to be typical of Government communications on this topic.</p>
  
  <p>This is not the only thing wrong with the Digital Economy Bill.  I wrote my previous email before the Bill was published.  Since then I have read with alarm section 17, which grants the Secretary of State power to amend by statutory instrument the Copyright, Designs and Patents Act of 1988 &#8220;if it appears to the Secretary of State appropriate to do so&#8221;.  To grant such broad powers to an unelected official is incredible, undemocratic and indefensible.</p>
  
  <p>I acknowledge the problem this &#8220;power to amend&#8221; is designed to tackle: technology changes too quickly for primary legislation to keep up.  However, the case has not been made that this justifies circumventing the democratic process, especially in such an important and controversial area as copyright law.  To me it rather suggests, <a href="http://www.ipo.gov.uk/pro-types/pro-copy/c-policy/c-strategy.htm" title='UKIPO report, page 47, paragraph 6: "[the Government] wishes copyright to develop in a technologically-neutral way"'>to paraphrase the UKIPO report</a>, that Parliament should amend copyright law to be more technologically neutral.</p>
  
  <p>Therefore I once again urge you to reject the Digital Economy Bill unless it is substantially amended, including the removal of section 17, and the addition of a guarantee of trial in court before technical limitations can be imposed on internet users.  I would also appreciate it if you could pass on my concerns to the Minister responsible for the Bill, for example by forwarding him this email.</p>
  
  <p>I am sure that, as a Government minister, you will be under considerable party pressure to support this Bill, and that I am unlikely to convince you.  However, I must reiterate that I will not vote for any MP or party who does support it, nor will many of my personal and professional acquaintances.</p>
  
  <p>Finally, I would like to inform you that I am publishing my emails to you on <a href="http://blog.samstokes.co.uk">my blog</a>, where my <a href="http://blog.samstokes.co.uk/2009/11/17/on-three-strikes-email-to-my-mp.html">previous email</a> has been read by over 70 people at time of writing.  With your permission, I would like to include your responses in these blog posts.</p>
  
  <p>Thank you again for reading this email.</p>
  
  <p>Yours sincerely,</p>
  
  <p>Sam Stokes</p>
</blockquote>

<h2>Update 2009/12/14: response</h2>

<p>Meg Hillier sent a brief reply to this email, stating that she supports the Digital Economy Bill because &#8220;filesharing has a big impact on people&#8217;s livelihoods&#8221;.  This is a disappointing response, as it basically ignores the content of this second email.  I will continue the correspondence, but as this blog is already more politics-heavy than I intended, I will stop publishing my emails unless there is a noteworthy development.</p>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[Regex style in Ruby]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2009/11/20/regex-style-in-ruby/"/>
        <updated>2009-11-20T22:03:00+00:00</updated>
        <id>http://blog.samstokes.co.uk/post/251167556</id>
        <content type="html"><![CDATA[<!--
vim:ft=mkd
-->

<p>Reading Patrick McKenzie&#8217;s excellent <a href="http://www.kalzumeus.com/2009/11/17/practical-metaprogramming-with-ruby-storing-preferences/">practical example of metaprogramming</a>, I came across a line of code I didn&#8217;t understand:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="nb">caller</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="sr">/`([^']*)'/</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span></code></pre></figure>

<p>That line taught me three new things about Ruby:</p>

<!-- more -->

<ol><li>The syntax for the subscript operator <code>[]</code> allows multiple arguments.  (It turns out I already knew this in another context: <code>[1,1,2,3,5,7][2,3] =&gt; [2,3,5]</code>)</li>
<li>You can subscript a String with a Regexp, returning the first match: <code>"goal"[/[aeiou]/] =&gt; "o"</code> (<code>nil</code> is returned if there is no match).</li>
<li>If you throw in an index <code>n</code>, then you get the <code>n</code>th capturing group of the first match: <code>"xaabb"[/(.)\1/, 1] =&gt; "a"</code> (or <code>nil</code> again if no match).</li>
</ol><p>That last one is interesting, because it means there&#8217;s a concise way I didn&#8217;t previously know about to achieve a common regex task: checking if an input string matches a given format, and if so, extracting part of the format.  Say we want to pull out the domain from an email address, but complain if we can&#8217;t find it:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="s2">"foo@example.com"</span><span class="p">[</span><span class="sr">/@(.*)/</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span> <span class="n">or</span> <span class="k">raise</span> <span class="s2">"bad email"</span>
<span class="c1"># =&amp;gt; "example.com"</span></code></pre></figure>

<p>Before learning this trick I would have either used a temporary match object <a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Pattern.html"><em>a la</em> Java</a>, or gritted my teeth and used a global variable Perl-style:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">match</span> <span class="o">=</span> <span class="sr">/@(.*)/</span><span class="p">.</span><span class="nf">match</span><span class="p">(</span><span class="s2">"foo@example.com"</span><span class="p">)</span>
<span class="k">if</span> <span class="n">match</span>
  <span class="n">match</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="k">else</span>
  <span class="k">raise</span> <span class="s2">"bad email"</span>
<span class="k">end</span>
<span class="c1"># =&amp;gt; "example.com"</span>

<span class="k">if</span> <span class="s2">"foo@example.com"</span> <span class="o">=~</span> <span class="sr">/@(.*)/</span>
  <span class="vg">$1</span>
<span class="k">else</span>
  <span class="k">raise</span> <span class="s2">"bad email"</span>
<span class="k">end</span>
<span class="c1"># =&amp;gt; "example.com"</span></code></pre></figure>

<p>Both of those seem rather verbose.  They can be <a href="http://www.flickr.com/photos/trojanguy/3575375564/">golfed</a> into one-liners, but the readability starts to suffer:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="vg">$1</span> <span class="k">if</span> <span class="s2">"foo@example.com"</span> <span class="o">=~</span> <span class="sr">/@(.*)/</span> <span class="n">or</span> <span class="k">raise</span> <span class="s2">"bad email"</span> <span class="c1"># =&amp;gt; "example.com"</span>
 
<span class="nb">require</span> <span class="s1">'andand'</span>
<span class="sr">/@(.*)/</span><span class="p">.</span><span class="nf">match</span><span class="p">(</span><span class="s2">"foo@example.com"</span><span class="p">).</span><span class="nf">andand</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="c1"># =&amp;gt; "example.com"</span></code></pre></figure>

<p>So I&#8217;m left wondering what&#8217;s the most readable and/or idiomatic style for regexes in Ruby.  TMTOWTDI indeed!  Even now I know what it means, <code>"xaabb"[/(.)\1/,1]</code> makes me double-take slightly - it&#8217;s an unusual way to use <code>[]</code> - but I guess it&#8217;s just another Ruby idiosyncracy I&#8217;ll come to know and love.</p>
]]></content>
      </entry>
    
  
    
      <entry>
        <title type="html"><![CDATA[On "three strikes": email to my MP]]></title>
        <link href="http://blog.samstokes.co.uk/blog/2009/11/17/on-three-strikes-email-to-my-mp/"/>
        <updated>2009-11-17T18:18:00+00:00</updated>
        <id>http://blog.samstokes.co.uk/post/247434685</id>
        <content type="html"><![CDATA[<!--
vim:ft=mkd
-->

<p>An email I wrote to <a href="http://www.theyworkforyou.com/mp/meg_hillier/hackney_south_and_shoreditch">my MP</a> (using the very handy <a href="http://www.writetothem.com/">WriteToThem</a>) regarding the UK Government&#8217;s so-called &#8220;three strikes&#8221; proposals to combat illegal filesharing.</p>


<!-- more -->


<blockquote>
<p>Dear Ms Hillier,</p>
<p>I am writing to ask you to vote against the Government&#8217;s forthcoming Digital Economy Bill, unless the currently proposed measures to impair or disconnect without trial the internet connections of those accused of illegal filesharing are removed from said Bill.</p>
<p>Copyright holders are already entitled to initiate private lawsuits against those they believe to be infringing their rights.  This of course involves a trial in court, with the accused party presumed innocent until proven guilty.  <a target="_blank" href="http://dmca.cs.washington.edu/">Methods of detecting infringement are known to be unreliable, leading to false accusations</a>, but currently this is the accuser&#8217;s problem.</p>
<p>The Government&#8217;s plans would remove the inconvenient (to the rights holder) need for a court case to punish the accused.  The unreliability of detection would become an issue for every internet user, since these plans do not require proof of infringement, only repeated accusation.</p>
<p>This circumvention of justice is justified only by evidence produced by the rights holders themselves.  It ignores evidence that <a target="_blank" href="http://labs.timesonline.co.uk/blog/2009/11/12/do-music-artists-do-better-in-a-world-with-illegal-file-sharing/">the music industry has actually grown over the last five years</a>, and that <a target="_blank" href="http://www.independent.co.uk/news/uk/crime/illegal-downloaders-spend-the-most-on-music-says-poll-1812776.html">filesharing may be an opportunity for the content industries rather than a threat</a>.</p>
<p>I am also very concerned about the precedent that would be set by these proposals.  Music and film are not the only industries whose business models have been shaken by the emergence of new technology.  The news industry, for example, is considering charging for its previously free online content.  Without question people will find ways to circumvent these &#8220;paywalls&#8221; and access the content for free.  Will we then allow news publishers to join in selecting people for disconnection?  I myself, as an independent software developer, am a creator of copyrighted works.  Can I disconnect people I believe have used my work without permission?  If not, why can the BPI do it but not me?</p>
<p>I believe the Government&#8217;s plans to be short-sighted in conception, wrong in principle, and likely in practice to do more harm than good.  I will vote against any politician who supports them.</p>
<p>I also ask you to sign <a target="_blank" href="http://edmi.parliament.uk/EDMi/EDMDetails.aspx?EDMID=39226">Early Day Motion 1997</a>, which echoes many of these sentiments.</p>
<p>Thank you for reading.</p>
<p>Yours sincerely,</p>
<p>Sam Stokes</p>
</blockquote>

<h2>Update 2009/12/02: response</h2>

<p>Ms Hillier was kind enough to respond by post to my email.  I will not reproduce her response here, as she has not given her consent to publish it; however I have blogged about <a href="http://blog.samstokes.co.uk/2009/11/30/why-the-digital-economy-bill-is-flawed.html">the further email I sent in reply</a>.</p>

<p>Since the Digital Economy Bill was <a href="http://www.publications.parliament.uk/pa/ld200910/ldbills/001/10001.i-ii.html">published</a> between my first email and my second, the latter <a href="http://blog.samstokes.co.uk/2009/11/30/why-the-digital-economy-bill-is-flawed.html">brings up some new points</a>, in particular regarding the lack of evidence to justify these measures and the broad powers to be given to the Secretary of State.</p>
]]></content>
      </entry>
    
  
</feed>
